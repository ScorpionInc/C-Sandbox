/* template.template
 * Purpose: Class-like template generation using preprocessor #defines
 * Created: 20241110
 * Updated: 20250430
//*/

/* Provided usage example:
#define SI_TEMPLATE_TYPE int
#include "template.template"
#define SI_TEMPLATE_TYPE float
#include "template.template"

int main(int argc, char** argv){
	struct intExample = {0};
	intExample_new(&intExample);
	struct floatExample = {0.0f};
	floatExample_new(&floatExample);
	return 0;
}
//*/

#include <stdio.h> //printf

#ifdef __cplusplus
extern "C" {
#endif //__cplusplus

#ifdef SI_TEMPLATE_TYPE

// Reference: https://stackoverflow.com/a/12844500
// Used to represent a preprocessor defined value as a string.
#ifndef _STRINGIFY
#define _STRINGIFY(s) #s
#define DEFINED__STRINGIFY
#endif
#ifndef STRINGIFY
#define STRINGIFY(s) _STRINGIFY(s)
#define DEFINED_STRINGIFY
#endif

// Reference: https://www.renenyffenegger.ch/notes/development/languages/C-C-plus-plus/preprocessor/macros/token-paste-operator/index
// Used to join/concat two defined preprocessor tokens without converting to a string
#ifndef PASTE_TWO_TOKENS
#define PASTE_TWO_TOKENS(token_1, token_2) token_1 ## token_2
#define DEFINED_PASTE_TWO_TOKENS
#endif
#ifndef PASTE_TWO_TOKENS_INDIRECT
#define PASTE_TWO_TOKENS_INDIRECT(token_1, token_2) PASTE_TWO_TOKENS(token_1 , token_2)
#define DEFINED_PASTE_TWO_TOKENS_INDIRECT
#endif

// Used to generate function/struct type names using provided template_type
#ifdef SI_TEMPLATE_FUNCTION
#undef SI_TEMPLATE_FUNCTION
#endif
#define SI_TEMPLATE_FUNCTION(B, E) \
	PASTE_TWO_TOKENS_INDIRECT(B, \
	PASTE_TWO_TOKENS_INDIRECT(SI_TEMPLATE_TYPE, E))


// Generates: struct intExample {
struct SI_TEMPLATE_FUNCTION(, Example) {
	SI_TEMPLATE_TYPE item;
};

// Generates: void intExample_new(struct intExample* address){
void SI_TEMPLATE_FUNCTION(, Example_new)(struct SI_TEMPLATE_FUNCTION(, Example)* address){
	printf("There is no cow level.\n");//!Debugging
}

void temp(){
	// Generates: struct intExample e = { 0 };
	struct SI_TEMPLATE_FUNCTION(, Example) e = { 0 };
	printf("Hello World! %i\n", e.item);//!Debugging
	SI_TEMPLATE_FUNCTION(, Example_new)();
}


// Clean up our preprocessor defines.
#undef SI_TEMPLATE_FUNCTION

// Only undefine these functions if they weren't already defined
// Done in the reverse order of their definition.
#ifdef DEFINED_PASTE_TWO_TOKENS_INDIRECT
#undef PASTE_TWO_TOKENS_INDIRECT
#undef DEFINED_PASTE_TWO_TOKENS_INDIRECT
#endif

#ifdef DEFINED_PASTE_TWO_TOKENS
#undef PASTE_TWO_TOKENS
#undef DEFINED_PASTE_TWO_TOKENS
#endif

#ifdef DEFINED_STRINGIFY
#undef STRINGIFY
#undef DEFINED_STRINGIFY
#endif

#ifdef DEFINED__STRINGIFY
#undef _STRINGIFY
#undef DEFINED__STRINGIFY
#endif

#undef SI_TEMPLATE_TYPE

#else

// Handle undefined template type.
#error "Template was included without a defined template type(SI_TEMPLATE_TYPE)."

#endif//SI_TEMPLATE_TYPE

#ifdef __cplusplus
}
#endif //__cplusplus
